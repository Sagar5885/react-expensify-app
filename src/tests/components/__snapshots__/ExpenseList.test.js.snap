// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render ExpenseList with empty message 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="content-container"
>
    <div
        className="list-header"
    >
        <div
            className="show-for-mobile"
        >
            Expenses
        </div>
        <div
            className="show-for-desktop"
        >
            Expense
        </div>
        <div
            className="show-for-desktop"
        >
            Amount
        </div>
    </div>
    <div
        className="list-body"
    >
        <div
            className="list-item list-item--message"
        >
            <span>
                No expenses
            </span>
        </div>
    </div>
</div>,
  "nodes": Array [
    <div
      className="content-container"
>
      <div
            className="list-header"
      >
            <div
                  className="show-for-mobile"
            >
                  Expenses
            </div>
            <div
                  className="show-for-desktop"
            >
                  Expense
            </div>
            <div
                  className="show-for-desktop"
            >
                  Amount
            </div>
      </div>
      <div
            className="list-body"
      >
            <div
                  className="list-item list-item--message"
            >
                  <span>
                        No expenses
                  </span>
            </div>
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_context": Object {},
    "_element": <ExpenseList
      expenses={Array []}
/>,
    "_instance": null,
    "_newState": null,
    "_rendered": <div
      className="content-container"
>
      <div
            className="list-header"
      >
            <div
                  className="show-for-mobile"
            >
                  Expenses
            </div>
            <div
                  className="show-for-desktop"
            >
                  Expense
            </div>
            <div
                  className="show-for-desktop"
            >
                  Amount
            </div>
      </div>
      <div
            className="list-body"
      >
            <div
                  className="list-item list-item--message"
            >
                  <span>
                        No expenses
                  </span>
            </div>
      </div>
</div>,
    "_rendering": false,
    "_updater": Updater {
      "_renderer": [Circular],
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ExpenseList
    expenses={Array []}
/>,
}
`;

exports[`should render ExpenseList with expenses 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="content-container"
>
    <div
        className="list-header"
    >
        <div
            className="show-for-mobile"
        >
            Expenses
        </div>
        <div
            className="show-for-desktop"
        >
            Expense
        </div>
        <div
            className="show-for-desktop"
        >
            Amount
        </div>
    </div>
    <div
        className="list-body"
    >
        <ExpenseListItem
            amount={195}
            createdAt={0}
            description="Gum"
            id="1"
            note=""
        />
        <ExpenseListItem
            amount={109500}
            createdAt={-345600000}
            description="Rent"
            id="2"
            note=""
        />
        <ExpenseListItem
            amount={4500}
            createdAt={345600000}
            description="Credit Card"
            id="3"
            note=""
        />
    </div>
</div>,
  "nodes": Array [
    <div
      className="content-container"
>
      <div
            className="list-header"
      >
            <div
                  className="show-for-mobile"
            >
                  Expenses
            </div>
            <div
                  className="show-for-desktop"
            >
                  Expense
            </div>
            <div
                  className="show-for-desktop"
            >
                  Amount
            </div>
      </div>
      <div
            className="list-body"
      >
            <ExpenseListItem
                  amount={195}
                  createdAt={0}
                  description="Gum"
                  id="1"
                  note=""
            />
            <ExpenseListItem
                  amount={109500}
                  createdAt={-345600000}
                  description="Rent"
                  id="2"
                  note=""
            />
            <ExpenseListItem
                  amount={4500}
                  createdAt={345600000}
                  description="Credit Card"
                  id="3"
                  note=""
            />
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_context": Object {},
    "_element": <ExpenseList
      expenses={
            Array [
                  Object {
                    "amount": 195,
                    "createdAt": 0,
                    "description": "Gum",
                    "id": "1",
                    "note": "",
                  },
                  Object {
                    "amount": 109500,
                    "createdAt": -345600000,
                    "description": "Rent",
                    "id": "2",
                    "note": "",
                  },
                  Object {
                    "amount": 4500,
                    "createdAt": 345600000,
                    "description": "Credit Card",
                    "id": "3",
                    "note": "",
                  },
                ]
      }
/>,
    "_instance": null,
    "_newState": null,
    "_rendered": <div
      className="content-container"
>
      <div
            className="list-header"
      >
            <div
                  className="show-for-mobile"
            >
                  Expenses
            </div>
            <div
                  className="show-for-desktop"
            >
                  Expense
            </div>
            <div
                  className="show-for-desktop"
            >
                  Amount
            </div>
      </div>
      <div
            className="list-body"
      >
            <ExpenseListItem
                  amount={195}
                  createdAt={0}
                  description="Gum"
                  id="1"
                  note=""
            />
            <ExpenseListItem
                  amount={109500}
                  createdAt={-345600000}
                  description="Rent"
                  id="2"
                  note=""
            />
            <ExpenseListItem
                  amount={4500}
                  createdAt={345600000}
                  description="Credit Card"
                  id="3"
                  note=""
            />
      </div>
</div>,
    "_rendering": false,
    "_updater": Updater {
      "_renderer": [Circular],
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ExpenseList
    expenses={
        Array [
            Object {
              "amount": 195,
              "createdAt": 0,
              "description": "Gum",
              "id": "1",
              "note": "",
            },
            Object {
              "amount": 109500,
              "createdAt": -345600000,
              "description": "Rent",
              "id": "2",
              "note": "",
            },
            Object {
              "amount": 4500,
              "createdAt": 345600000,
              "description": "Credit Card",
              "id": "3",
              "note": "",
            },
          ]
    }
/>,
}
`;
